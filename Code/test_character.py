"""test_character.py

This file was only made to quickly test the character segmentation part of segmentation.py
This file should thus not be used in the end product.
The way we test character segmentation here is by loading in pre-made images, which
were made during the visualization step in segmentation.py
"""

import PIL.Image as Image
import PIL.ImageOps as ImageOps
import segmentation as seg
import os
import numpy as np
import argparse

parser = argparse.ArgumentParser()
parser.add_argument("-v", "--visualize", action="store_true", help="Tell the program whether to visualize intermediate results. See visualizer.py")
parser.add_argument("-t", "--testdata", default="../Test_Data", help="Location of test data (can be relative or absolute path)")
parser.add_argument("--CONST_C", type=int, default=-366, help="The constant C in the formula for D(n). See A* paper.")
parser.add_argument("-s", "--subsampling", type=int, default=1, help="The subsampling factor of the test image prior to performing the A* algorithm.")
parser.add_argument("--CONST_C_CHAR", type=int, default=-366, help="The constant C in the formula for D(n), used for segmenting characters. See A* paper.")
parser.add_argument("-sc", "--subsampling_char", type=int, default=1, help="The subsampling factor of the segmented image prior to performing the A* algorithm (for characters).")
args = parser.parse_args()

# Load the images of line segments generated by segmentation.py
imgarrays = []
for i in range(8):
    filename = f"../Figures/line_segment_{i}.png"
    img = Image.open(filename)
    img = img.convert("F")
    imgarray = np.array(img)
    imgarrays.append(imgarray)
    break

character_zones = seg.segment_characters(imgarrays, args)